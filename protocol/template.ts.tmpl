/* tslint:disable variable-name */

// IMPORTANT: file automatically generated by rpcgen
// do not change it unless you know what you're doing

import { IJSONRPCSocketClient } from '../json-rpc-socket/client'

// ----------------
// interfaces

{% for i in struct -%}
{%- set ts = i.code(coder.typescript) -%}
// {{ util.eitherOr(i.desc, ts.structName) }}
export interface {{ ts.structName }} {
  {{ ts.structParams.join('\n  ') | safe }}
}

{% endfor -%}

// ----------------
// electrum protocol

export class {{ util.toUpperCamelCase(name, '-') }} {
  static libname: string = 'javascript client'
  static version: string = '{{ version }}'
  static hash: string = '{{ document.hash }}'
  private client: IJSONRPCSocketClient

  constructor (client: IJSONRPCSocketClient) {
    this.client = client
    this.client.events.on('close', () => { this._onClose() })
  }

  // ----------------
  // lifecycle handlers

  private _onClose (): void {
    const list: Array<string> = []
    {%- for i in notification -%}
    {%- if i.dir === 1 %}
    list.push('{{ i.name }}')
    {%- endif -%}
    {%- endfor %}
    list.forEach(event => this.client.events.removeAllListeners(event))
  }

  // ----------------
  // electrum methods

  {%- for i in request -%}
  {%- if i.dir === 0 -%}
  {%- set ts = i.code(coder.typescript) %}

  // {{ util.eitherOr(i.desc, ts.funcName) }}
  public {{ ts.funcName }} ({{ ts.funcParams.join(', ') | safe}}): Promise<{{ ts.funcReturn | safe}}> {
    return this.client.request('{{ ts.requestName }}', {{ util.printArray(ts.params) }})
  }
{%- endif -%}
{%- endfor %}
}

// ----------------
// electrum methods

export namespace validate {
  {%- for i in struct %}
  {%- set ts = i.code(coder.typescript) %}
  export const {{ ts.structName }} = (obj: object): boolean => {
    // TODO: const props = {{ util.printArray(i.storage, { prop: 'name', quotes: true }) }}
    return [
      {%- for item in i.storage %}
      '{{ item.name }}'{{ "" if loop.last else "," }}
      {%- endfor %}
    ].every(prop => prop in obj)
  }
  {%- endfor %}
}